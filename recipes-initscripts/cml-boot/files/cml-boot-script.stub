
clear

cat /etc/init_ascii

echo "-- cml init log on $LOGTTY [ready]"
echo "-- waiting for c0 to start ..."

exec > /dev/$LOGTTY
exec 2>&1


PATH=/sbin:/bin:/usr/sbin:/usr/bin

mkdir -p /proc
mkdir -p /sys
mkdir -p /run

mount /proc
mount /sys
mount /dev
mount /run

mkdir -p /dev/pts
mount /dev/pts

# do not log kernel messages to console
echo 1 > /proc/sys/kernel/printk

mkdir -p /dev/shm
mkdir -p /data

udevd --daemon

udevadm trigger --action=add
udevadm settle 

mount -a

mkdir -p /data/logs

#now modules partition is mounted
udevadm trigger --action=add
udevadm settle

modprobe loop
modprobe btrfs
modprobe vport-gre

mount -a

if [ ! -f "/data/cml/containers/00000000-0000-0000-0000-000000000000.conf" ]; then
	cp /data/cml/containers_templates/00000000-0000-0000-0000-000000000000.conf /data/cml/containers/00000000-0000-0000-0000-000000000000.conf
fi

if [ -e "/dev/tpm0" ]; then
	echo "Starting TPM/TSS 2.0 Helper Daemon (tpm2d)"
	tpm2d &

	if [ ! -S /run/socket/cml-tpm2d-control ]; then
		echo "Waiting for tpm2d's control interface"
	fi
	while [ ! -S /run/socket/cml-tpm2d-control ]; do
		echo -n "."
		sleep 2
	done
fi

# if device.cert is not present, start scd to initialize device
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin"
if [ ! -f /data/cml/tokens/device.cert ]; then
	echo "--- Provisioning/Installing Mode ---" > /etc/motd
	echo "Starting Security Helpder Daemon (scd) in Provisioning Mode"
	scd
	echo "--- Provisioning/Installing Mode ---" > /dev/console
fi

echo "Starting Security Helpder Daemon (scd)"
scd &
if [ ! -S /run/socket/cml-scd-control ]; then
	echo "Waiting for scd's control interface"
fi
while [ ! -S /run/socket/cml-scd-control ]; do
	echo -n "."
	sleep 1
done

echo "Starting Compartment Manger Daemon (cmld)"
cmld &
echo "-- cml debug console on tty12 [ready]" > /dev/console

exec /sbin/init > /dev/$LOGTTY 2>&1

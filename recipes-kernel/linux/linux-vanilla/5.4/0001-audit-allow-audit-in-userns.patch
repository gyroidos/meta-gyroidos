From dab55d5142f199393447022d954386e384526de0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20Wei=C3=9F?= <michael.weiss@aisec.fraunhofer.de>
Date: Thu, 25 Feb 2021 14:09:30 +0100
Subject: [PATCH] audit: allow audit in userns

---
 kernel/audit.c | 23 ++---------------------
 1 file changed, 2 insertions(+), 21 deletions(-)

diff --git a/kernel/audit.c b/kernel/audit.c
index 3afa3f64584b..63617013dc38 100644
--- a/kernel/audit.c
+++ b/kernel/audit.c
@@ -1428,20 +1428,6 @@ static int audit_netlink_ok(struct sk_buff *skb, u16 msg_type)
 {
 	int err = 0;
 
-	/* Only support initial user namespace for now. */
-	/*
-	 * We return ECONNREFUSED because it tricks userspace into thinking
-	 * that audit was not configured into the kernel.  Lots of users
-	 * configure their PAM stack (because that's what the distro does)
-	 * to reject login if unable to send messages to audit.  If we return
-	 * ECONNREFUSED the PAM stack thinks the kernel does not have audit
-	 * configured in and will let login proceed.  If we return EPERM
-	 * userspace will reject all logins.  This should be removed when we
-	 * support non init namespaces!!
-	 */
-	if (current_user_ns() != &init_user_ns)
-		return -ECONNREFUSED;
-
 	switch (msg_type) {
 	case AUDIT_LIST:
 	case AUDIT_ADD:
@@ -1460,18 +1446,13 @@ static int audit_netlink_ok(struct sk_buff *skb, u16 msg_type)
 	case AUDIT_TTY_SET:
 	case AUDIT_TRIM:
 	case AUDIT_MAKE_EQUIV:
-		/* Only support auditd and auditctl in initial pid namespace
-		 * for now. */
-		if (task_active_pid_ns(current) != &init_pid_ns)
-			return -EPERM;
-
 		if (!netlink_capable(skb, CAP_AUDIT_CONTROL))
 			err = -EPERM;
 		break;
 	case AUDIT_USER:
 	case AUDIT_FIRST_USER_MSG ... AUDIT_LAST_USER_MSG:
 	case AUDIT_FIRST_USER_MSG2 ... AUDIT_LAST_USER_MSG2:
-		if (!netlink_capable(skb, CAP_AUDIT_WRITE))
+		if (!netlink_ns_capable(skb, current_user_ns(), CAP_AUDIT_WRITE))
 			err = -EPERM;
 		break;
 	default:  /* bad msg */
@@ -2034,7 +2015,7 @@ static void audit_receive(struct sk_buff  *skb)
 /* Run custom bind function on netlink socket group connect or bind requests. */
 static int audit_bind(struct net *net, int group)
 {
-	if (!capable(CAP_AUDIT_READ))
+	if (!ns_capable(current_user_ns(), CAP_AUDIT_READ))
 		return -EPERM;
 
 	return 0;
-- 
2.20.1

